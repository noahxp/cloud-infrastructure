---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'CodeDeploy, CodeDeploy Service Role'

# environment type & bash parameters
Parameters:
  ParentStack:
    Type: String
    Description: 'Parent VPC Stack Name'
    Default: ''

  EnvType:
    Type: String
    Description: 'Environment Type for this Stack.'
    ConstraintDescription: 'must specify prod, stag or dev.'
    Default: 'dev'
    AllowedValues:
    - 'prod'
    - 'stag'
    - 'dev'

  AsgStack:
    Type: String
    Description: 'The first AutoScalingGroup Stack.'
    Default: ''

  AsgStack2:
    Type: String
    Description: 'The secondary AutoScalingGroup Stack.'
    Default: ''

  UseALB:
    Type: String
    Description: 'CodeDeploy Integration to ALB'
    AllowedValues: ['yes', 'no']
    Default: 'no'

  SNSStack:
    Type: String
    Description: 'notification to slack'
    AllowedValues: ['yes', 'no']
    Default: 'no'


Conditions:
  AsgStackCond:  !Not [ !Equals [ !Ref AsgStack, '' ] ]
  AsgStack2Cond: !Not [ !Equals [ !Ref AsgStack2, '' ] ]
  SNSStackCond: !Equals [ !Ref SNSStack, 'yes' ]
  ALBCond: !Equals [ !Ref SNSStack, 'yes' ]


Resources:
  CodeDeployApplication:
    Type: "AWS::CodeDeploy::Application"
    Properties:
      ApplicationName: !Sub '${AWS::StackName}-${EnvType}-CodeDeploy'

  CodeDeployGroup:
    Type: "AWS::CodeDeploy::DeploymentGroup"
    Properties:
      DeploymentGroupName: !Sub '${AWS::StackName}-${EnvType}-DeploymentGroup'
      # AlarmConfiguration:
      #   AlarmConfiguration
      ApplicationName: !Ref CodeDeployApplication
      AutoScalingGroups:
      - !If
        - AsgStackCond
        - 'Fn::ImportValue': !Sub '${AsgStack}-${EnvType}-ASG'
        - !Ref "AWS::NoValue"
      - !If
        - AsgStack2Cond
        - 'Fn::ImportValue': !Sub '${AsgStack2}-${EnvType}-ASG'
        - !Ref "AWS::NoValue"
      LoadBalancerInfo:
        #        for CLB
        #        ElbInfoList:
        #          - Name: !GetAtt NetworkLoadBalancer.LoadBalancerName
        #        for ALB, NLB
        #        TargetGroupInfoList:
        #          - Name: !GetAtt NLBTargetGroup.TargetGroupName
        TargetGroupInfoList:
        - !If
          - ALBCond
          - Name: 'Fn::ImportValue': !Sub '${AsgStack2}-${EnvType}-ALB-TG'
          - !Ref "AWS::NoValue"
      DeploymentStyle:
        DeploymentOption: WITH_TRAFFIC_CONTROL
      DeploymentConfigName: "CodeDeployDefault.OneAtATime"
      ServiceRoleArn: !GetAtt CodeDeployServiceRole.Arn
      # reference : http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_TriggerConfig.html
      TriggerConfigurations:
        !If
      - SNSStackCond
      - - TriggerEvents:
          # - DeploymentStart
          - DeploymentSuccess
          - DeploymentFailure
          - DeploymentStop
          - DeploymentRollback
          # - DeploymentReady
          # - InstanceStart
          - InstanceSuccess
          - InstanceFailure
          # - InstanceReady'
          TriggerName: !Sub '${AWS::StackName}-${EnvType}-trigger'
          TriggerTargetArn:
            'Fn::ImportValue': !Sub '${ParentStack}-${EnvType}-sns2slack'

      - !Ref 'AWS::NoValue'

  CodeDeployServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: 'Allow'
          Action: 'sts:AssumeRole'
          Principal:
            Service:
            # codedeploy.amazonaws.com for all supported endpoints, codedeploy.XXX.amazonaws.com for special endpoints
            # reference : http://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-create-service-role.html
            - codedeploy.amazonaws.com
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
      # AWSCodeDeployRole already include the sns:Publish policy
#      Policies:
#        -
#          PolicyName: !Sub '${AWS::StackName}-${EnvType}-CodeDeployPolicy'
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              -
#                Effect: 'Allow'
#                Action:
#                  - 'sns:Publish'
#                Resource: '*'
