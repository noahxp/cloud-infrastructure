
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AutoScalingGroup & LaunchConfiguration'

# environment type & bash parameters
Parameters:
  ParentStack:
    Type: String
    Description: 'Parent VPC Stack Name'
    Default: 'noah-tw'

  EnvType:
    Type: String
    Description: 'Environment Type for this Stack.'
    ConstraintDescription: 'must specify prod, stag or dev.'
    Default: 'dev'
    AllowedValues:
      - 'prod'
      - 'stag'
      - 'dev'

  MaxSize:
    Type: String
    Description: 'The maximum size of the Auto Scaling group.'
    Default: 10

  MinSize:
    Type: String
    Description: 'The minimum size of the Auto Scaling group.'
    Default: 0

  DesiredCapacity:
    Type: String
    Description: 'Specifies the desired capacity for the Auto Scaling group.'
    Default: 0

  AMIId:
    Type: String
    Description: Provides the unique ID of the Amazon Machine Image (AMI) that was assigned during registration.
    Default: 'ami-3bd3c45c'

  InstanceType:
    Type: String
    Description: 'Specifies the instance type of the EC2 instance'
    ConstraintDescription: ''
    Default: 'm3.medium'
    AllowedValues:
      - 't2.micro'
      - 'm4.large'
      - 'm4.xlarge'
      - 'm3.medium'

  ALBStackName:
    Type: String
    Description: 'using Application Load Balancer with ALB Name'
    Default: 'noah-tw-ecs-alb'

  CLBStackName:
    Type: String
    Description: 'using Classic Load Balancer with CLB Name'
    Default: ''

  EC2SubnetPosition:
    Type: String
    Description: 'web service subnet position'
    Default: 'PrivateSecurityGroup1'
    AllowedValues:
      - 'PrivateSecurityGroup1'
      - 'PrivateSecurityGroup2'

  EC2KeyPair:
    Type: String
    Description: 'The Bastion Server KeyPair'
    Default: ''

  SpotPrice:
    Type: Number
    Description: '0 for On-Demand, else for Spot-Instance'
    Default: '0.013'

Conditions:
  EC2KeyPairCond: !Not [ !Equals [ !Ref EC2KeyPair, '' ] ]
  SpotInstanceCond: !Not [ !Equals [ !Ref SpotPrice, 0 ] ]
  ALBCond: !Not [ !Equals [ !Ref ALBStackName, '' ] ]
  CLBCond: !Not [ !Equals [ !Ref CLBStackName, '' ] ]

##### create resource #####
Resources:
    Asg:
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
        Cooldown: '300'
        DesiredCapacity: '0'
        HealthCheckGracePeriod: 300
        # ALB or EC2 , start with EC2, be sure to use ELB
        HealthCheckType: 'EC2'
        # InstanceId: !Sub 'Asg-${AWS::StackName}-'
        LaunchConfigurationName: !Ref LaunchConfig
        # LoadBalancerNames for CLB
        LoadBalancerNames:
          !If
          - CLBCond
          -
            - 'Fn::ImportValue': !Sub '${CLBStackName}-${EnvType}-CLB'
          - !Ref "AWS::NoValue"
          # - 'Fn::ImportValue': !Sub '${ALBStackName}-${EnvType}-ALB'
          # - Ref: 'noah-tw-ecs-alb-dev-ALB'
        # TargetGroupARNs for ALB
        TargetGroupARNs:
          # - 'arn:aws:elasticloadbalancing:ap-northeast-1:796957138374:targetgroup/noah-Appli-10RJZ5XE71XGQ/35d9457f7aa145fb'
          !If
          - ALBCond
          -
            - 'Fn::ImportValue': !Sub '${ALBStackName}-${EnvType}-ALB-TG'
          - !Ref "AWS::NoValue"
        MaxSize: !Sub '${MaxSize}'
        MinSize: !Sub '${MinSize}'
        DesiredCapacity: !Sub '${DesiredCapacity}'
        # MetricsCollection:
        #   -
        #     Granularity: "1Minute"
        #     Metrics:
        #       - "GroupMinSize"
        #       - "GroupMaxSize"
        # NotificationConfigurations:
        #   - NotificationConfigurations
        # PlacementGroup: String
        # TerminationPolicies:
        #   - String
        VPCZoneIdentifier:
          - 'Fn::ImportValue': !Sub '${ParentStack}-${EnvType}-PrivateSubnet1A'
          - 'Fn::ImportValue': !Sub '${ParentStack}-${EnvType}-PrivateSubnet2B'
        Tags:
          - PropagateAtLaunch: true
            Key: Name
            Value: !Sub '${AWS::StackName}-${ParentStack}-${EnvType}-Asg'
            ResourceId: 'my-asg'

    LaunchConfig:
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties:
        AssociatePublicIpAddress: false
        BlockDeviceMappings:
          - DeviceName: '/dev/xvda'
            Ebs:
              DeleteOnTermination: true
              Encrypted: false
              VolumeSize: 8
              VolumeType: gp2
        ImageId: !Sub '${AMIId}'
        # InstanceId: 'asg-lc'
        InstanceMonitoring: true
        InstanceType: !Sub '${InstanceType}'
        KeyName: !If [EC2KeyPairCond, !Ref EC2KeyPair, !Ref "AWS::NoValue"]
        SecurityGroups:
          - 'Fn::ImportValue': !Sub '${ALBStackName}-${EnvType}-${EC2SubnetPosition}'
        SpotPrice: !If [SpotInstanceCond, !Ref SpotPrice, !Ref "AWS::NoValue"]
        UserData:
          'Fn::Base64': !Sub |
             #!/bin/bash -x
             sudo yum update -y
             wget https://aws-codedeploy-ap-northeast-1.s3.amazonaws.com/latest/install
             chmod +x ./install
             sudo ./install auto


Outputs:
  AutoScalingGroup:
    Value: !Ref Asg
    Export:
      Name: !Sub '${AWS::StackName}-${EnvType}-ASG'
